[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/robert/printer_data/comms/klippy.sock

[authorization]
trusted_clients:
    10.0.0.0/16
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FC00::/7
    FE80::/10
    ::1/128
cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz

[analysis]
auto_dump_default_config: true
enable_auto_analysis: true
enable_estimator_updates: true

[octoprint_compat]

[file_manager]
enable_object_processing: True

[history]

[spoolman]
server: http://x300.lan:7912
sync_rate: 5


# [power steckdose]
# type: homeassistant
# locked_while_printing: True
# address: ha.meinewolke.pw
# #   A valid ip address or hostname for the Home Assistant server.  This
# #   parameter must be provided.
# protocol: https
# #   The protocol for the URL to the Home Assistant server. Default is http.
# port: 443
# #   The port the Home Assistant server is listening on.  Default is 8123.
# device: switch.3d_drucker_switch
# #   The entity ID of the switch to control. This parameter must be provided.
# token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhMjQ1OWE0NWVmYTk0YWExOTg2M2I2OGUxYWFhYTQyYSIsImlhdCI6MTc2MDY5ODc2MywiZXhwIjoyMDc2MDU4NzYzfQ.VdeOOUjN_uXCqXFRULsDp0EjdOb-0tmERtciKfcjzqw
# #   A token used for request authorization.  This option accepts
# #   Jinja2 Templates, see the [secrets] section for details. This parameter
# #   must be provided.
# domain: switch
# #   The class of device managed by Home Assistant. Default is "switch".

[update_manager]
channel: dev
refresh_interval: 168

[update_manager mainsail]
path: /home/robert/mainsail
repo: mainsail-crew/mainsail
channel: stable
type: web

[update_manager mainsail-config]
managed_services: klipper
origin: https://github.com/mainsail-crew/mainsail-config.git
path: /home/robert/mainsail-config
primary_branch: master
type: git_repo

[update_manager KlipperScreen]
install_script: /home/robert/KlipperScreen/scripts/KlipperScreen-install.sh
requirements: /home/robert/KlipperScreen/scripts/KlipperScreen-requirements.txt
env: /home/robert/.KlipperScreen-env/bin/python
managed_services: KlipperScreen
origin: https://github.com/KlipperScreen/KlipperScreen.git
path: /home/robert/KlipperScreen
type: git_repo

[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

[update_manager update_klipper_and_mcus]
type: git_repo
primary_branch: main
path: ~/ukam
origin: https://github.com/fbeauKmi/update_klipper_and_mcus.git
is_system_service: False

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False

[update_manager klipper-backup]
type: git_repo
path: ~/klipper-backup
origin: https://github.com/Staubgeborener/klipper-backup.git
managed_services: moonraker
primary_branch: main

# [update_manager cartographer]
# type: git_repo
# path: ~/cartographer-klipper
# channel: stable
# origin: https://github.com/Cartographer3D/cartographer-klipper.git
# is_system_service: False
# managed_services: klipper
# info_tags:
#   desc=Cartographer Probe

[update_manager klipper_tmc_autotune]
type: git_repo
channel: dev
path: ~/klipper_tmc_autotune
origin: https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services: klipper
primary_branch: main
install_script: install.sh
